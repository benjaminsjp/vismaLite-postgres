// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// schema.prisma

model Elev {
  eId          Int          @id @default(autoincrement())
  fNavn        String
  eNavn        String
  epost        String
  passord      String
  fravaer      Fravaer[]
  anmerkninger Anmerkning[]
  elevFag      ElevFag[]

  @@map("elev")
}

model Laerer {
  lId     Int    @id @default(autoincrement())
  fNavn   String
  eNavn   String
  epost   String
  passord String
  fag     Fag[]

  @@map("laerer")
}

model Karakter {
  kId           Int    @id @default(autoincrement())
  karakter      Int
  beskrivelse   String
  maaalopnaelse String
  fag           Fag[]

  @@map("karakter")
}

model Fag {
  fagKode  Int       @id @default(autoincrement())
  fagNavn  String
  lId      Int
  kId      Int
  elevFag  ElevFag[]
  karakter Karakter  @relation(fields: [kId], references: [kId])
  laerer   Laerer    @relation(fields: [lId], references: [lId])

  @@map("fag")
}

model ElevFag {
  eId     Int
  fagKode Int
  elev    Elev @relation(fields: [eId], references: [eId])
  fag     Fag  @relation(fields: [fagKode], references: [fagKode])

  @@id([eId, fagKode])
  @@map("elevFag")
}

model Fravaer {
  dato DateTime @id
  eId  Int
  elev Elev     @relation(fields: [eId], references: [eId])

  @@map("fravaer")
}

model Anmerkning {
  aId          Int      @id @default(autoincrement())
  aBeskrivelse Int
  kategori     Boolean
  eId          Int
  dato         DateTime
  elev         Elev     @relation(fields: [eId], references: [eId])

  @@map("anmerkning")
}
